#############################################################################
# Makefile for building: imageClient
# Generated by qmake (2.01a) (Qt 4.7.4) on: Tue Aug 14 09:46:34 2012
# Project:  imageClient.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++-64 -o Makefile imageClient.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -I-I -I/usr/include/tango -I-I -I/usr/local/qwt-5.2.1/include -I-I -I/usr/local/include -I. -I.
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)  -L/usr/lib64 -L/usr/lib -ltango -lomniORB4 -llog4tango -lomniDynamic4 -lCOS4 -lomnithread -L/usr/local/qwt-5.2.1/lib -lqwt -L/usr/local/lib -lopencv_highgui -lopencv_core -lQtGui -L/usr/lib64 -L/usr/X11R6/lib64 -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		my_device.cpp \
		starttangowin.cpp \
		subwindow.cpp \
		subwindowrealtime.cpp \
		imagewidget.cpp \
		subwindowsnapshot.cpp \
		imgmanipulation.cpp \
		tangosettingswin.cpp \
		menutab.cpp \
		tangovariables.cpp \
		mythread.cpp \
		histogram_item.cpp \
		imagehistogram.cpp \
		mylineedit.cpp \
		picturemode.cpp \
		bgcpl_wgt.cpp \
		slidermanip.cpp \
		propertymanipulation.cpp \
		manipulator.cpp \
		rsfl_wgt.cpp \
		mydevproperty.cpp moc_mainwindow.cpp \
		moc_my_device.cpp \
		moc_starttangowin.cpp \
		moc_subwindow.cpp \
		moc_subwindowrealtime.cpp \
		moc_imagewidget.cpp \
		moc_subwindowsnapshot.cpp \
		moc_imgmanipulation.cpp \
		moc_tangosettingswin.cpp \
		moc_menutab.cpp \
		moc_tangovariables.cpp \
		moc_mythread.cpp \
		moc_imagehistogram.cpp \
		moc_mylineedit.cpp \
		moc_mydevproperty.cpp \
		moc_bgcpl_wgt.cpp \
		moc_slidermanip.cpp \
		moc_propertymanipulation.cpp \
		moc_manipulator.cpp \
		moc_rsfl_wgt.cpp \
		qrc_application.cpp
OBJECTS       = main.o \
		mainwindow.o \
		my_device.o \
		starttangowin.o \
		subwindow.o \
		subwindowrealtime.o \
		imagewidget.o \
		subwindowsnapshot.o \
		imgmanipulation.o \
		tangosettingswin.o \
		menutab.o \
		tangovariables.o \
		mythread.o \
		histogram_item.o \
		imagehistogram.o \
		mylineedit.o \
		picturemode.o \
		bgcpl_wgt.o \
		slidermanip.o \
		propertymanipulation.o \
		manipulator.o \
		rsfl_wgt.o \
		mydevproperty.o \
		moc_mainwindow.o \
		moc_my_device.o \
		moc_starttangowin.o \
		moc_subwindow.o \
		moc_subwindowrealtime.o \
		moc_imagewidget.o \
		moc_subwindowsnapshot.o \
		moc_imgmanipulation.o \
		moc_tangosettingswin.o \
		moc_menutab.o \
		moc_tangovariables.o \
		moc_mythread.o \
		moc_imagehistogram.o \
		moc_mylineedit.o \
		moc_mydevproperty.o \
		moc_bgcpl_wgt.o \
		moc_slidermanip.o \
		moc_propertymanipulation.o \
		moc_manipulator.o \
		moc_rsfl_wgt.o \
		qrc_application.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		imageClient.pro
QMAKE_TARGET  = imageClient
DESTDIR       = 
TARGET        = imageClient

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: imageClient.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/libQtGui.prl \
		/usr/lib64/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 -o Makefile imageClient.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/libQtGui.prl:
/usr/lib64/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 -o Makefile imageClient.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/imageClient1.0.0 || $(MKDIR) .tmp/imageClient1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/imageClient1.0.0/ && $(COPY_FILE) --parents mainwindow.h my_device.h starttangowin.h subwindow.h subwindowrealtime.h imagewidget.h subwindowsnapshot.h imgmanipulation.h tangosettingswin.h enum.h menutab.h tangovariables.h mythread.h imagehistogram.h histogram_item.h mylineedit.h picturemode.h mydevproperty.h bgcpl_wgt.h slidermanip.h propertymanipulation.h manipulator.h rsfl_wgt.h .tmp/imageClient1.0.0/ && $(COPY_FILE) --parents application.qrc .tmp/imageClient1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp my_device.cpp starttangowin.cpp subwindow.cpp subwindowrealtime.cpp imagewidget.cpp subwindowsnapshot.cpp imgmanipulation.cpp tangosettingswin.cpp menutab.cpp tangovariables.cpp mythread.cpp histogram_item.cpp imagehistogram.cpp mylineedit.cpp picturemode.cpp bgcpl_wgt.cpp slidermanip.cpp propertymanipulation.cpp manipulator.cpp rsfl_wgt.cpp mydevproperty.cpp .tmp/imageClient1.0.0/ && $(COPY_FILE) --parents mainwindow.ui .tmp/imageClient1.0.0/ && (cd `dirname .tmp/imageClient1.0.0` && $(TAR) imageClient1.0.0.tar imageClient1.0.0 && $(COMPRESS) imageClient1.0.0.tar) && $(MOVE) `dirname .tmp/imageClient1.0.0`/imageClient1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/imageClient1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_my_device.cpp moc_starttangowin.cpp moc_subwindow.cpp moc_subwindowrealtime.cpp moc_imagewidget.cpp moc_subwindowsnapshot.cpp moc_imgmanipulation.cpp moc_tangosettingswin.cpp moc_menutab.cpp moc_tangovariables.cpp moc_mythread.cpp moc_imagehistogram.cpp moc_mylineedit.cpp moc_mydevproperty.cpp moc_bgcpl_wgt.cpp moc_slidermanip.cpp moc_propertymanipulation.cpp moc_manipulator.cpp moc_rsfl_wgt.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_my_device.cpp moc_starttangowin.cpp moc_subwindow.cpp moc_subwindowrealtime.cpp moc_imagewidget.cpp moc_subwindowsnapshot.cpp moc_imgmanipulation.cpp moc_tangosettingswin.cpp moc_menutab.cpp moc_tangovariables.cpp moc_mythread.cpp moc_imagehistogram.cpp moc_mylineedit.cpp moc_mydevproperty.cpp moc_bgcpl_wgt.cpp moc_slidermanip.cpp moc_propertymanipulation.cpp moc_manipulator.cpp moc_rsfl_wgt.cpp
moc_mainwindow.cpp: imagehistogram.h \
		histogram_item.h \
		picturemode.h \
		enum.h \
		my_device.h \
		mydevproperty.h \
		starttangowin.h \
		mylineedit.h \
		subwindowrealtime.h \
		subwindow.h \
		imagewidget.h \
		imgmanipulation.h \
		subwindowsnapshot.h \
		tangosettingswin.h \
		menutab.h \
		tangovariables.h \
		mythread.h \
		bgcpl_wgt.h \
		propertymanipulation.h \
		manipulator.h \
		rsfl_wgt.h \
		slidermanip.h \
		mainwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_my_device.cpp: mydevproperty.h \
		my_device.h
	/usr/bin/moc $(DEFINES) $(INCPATH) my_device.h -o moc_my_device.cpp

moc_starttangowin.cpp: my_device.h \
		mydevproperty.h \
		mylineedit.h \
		starttangowin.h
	/usr/bin/moc $(DEFINES) $(INCPATH) starttangowin.h -o moc_starttangowin.cpp

moc_subwindow.cpp: imagewidget.h \
		imgmanipulation.h \
		enum.h \
		mydevproperty.h \
		picturemode.h \
		subwindow.h
	/usr/bin/moc $(DEFINES) $(INCPATH) subwindow.h -o moc_subwindow.cpp

moc_subwindowrealtime.cpp: subwindow.h \
		imagewidget.h \
		imgmanipulation.h \
		enum.h \
		mydevproperty.h \
		picturemode.h \
		my_device.h \
		subwindowrealtime.h
	/usr/bin/moc $(DEFINES) $(INCPATH) subwindowrealtime.h -o moc_subwindowrealtime.cpp

moc_imagewidget.cpp: imgmanipulation.h \
		enum.h \
		mydevproperty.h \
		picturemode.h \
		imagewidget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) imagewidget.h -o moc_imagewidget.cpp

moc_subwindowsnapshot.cpp: subwindow.h \
		imagewidget.h \
		imgmanipulation.h \
		enum.h \
		mydevproperty.h \
		picturemode.h \
		subwindowsnapshot.h
	/usr/bin/moc $(DEFINES) $(INCPATH) subwindowsnapshot.h -o moc_subwindowsnapshot.cpp

moc_imgmanipulation.cpp: enum.h \
		mydevproperty.h \
		imgmanipulation.h
	/usr/bin/moc $(DEFINES) $(INCPATH) imgmanipulation.h -o moc_imgmanipulation.cpp

moc_tangosettingswin.cpp: enum.h \
		tangosettingswin.h
	/usr/bin/moc $(DEFINES) $(INCPATH) tangosettingswin.h -o moc_tangosettingswin.cpp

moc_menutab.cpp: enum.h \
		menutab.h
	/usr/bin/moc $(DEFINES) $(INCPATH) menutab.h -o moc_menutab.cpp

moc_tangovariables.cpp: mylineedit.h \
		tangovariables.h
	/usr/bin/moc $(DEFINES) $(INCPATH) tangovariables.h -o moc_tangovariables.cpp

moc_mythread.cpp: mythread.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mythread.h -o moc_mythread.cpp

moc_imagehistogram.cpp: histogram_item.h \
		picturemode.h \
		enum.h \
		imagehistogram.h
	/usr/bin/moc $(DEFINES) $(INCPATH) imagehistogram.h -o moc_imagehistogram.cpp

moc_mylineedit.cpp: mylineedit.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mylineedit.h -o moc_mylineedit.cpp

moc_mydevproperty.cpp: mydevproperty.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mydevproperty.h -o moc_mydevproperty.cpp

moc_bgcpl_wgt.cpp: propertymanipulation.h \
		mylineedit.h \
		enum.h \
		bgcpl_wgt.h
	/usr/bin/moc $(DEFINES) $(INCPATH) bgcpl_wgt.h -o moc_bgcpl_wgt.cpp

moc_slidermanip.cpp: propertymanipulation.h \
		mylineedit.h \
		enum.h \
		bgcpl_wgt.h \
		mydevproperty.h \
		picturemode.h \
		imagehistogram.h \
		histogram_item.h \
		rsfl_wgt.h \
		slidermanip.h
	/usr/bin/moc $(DEFINES) $(INCPATH) slidermanip.h -o moc_slidermanip.cpp

moc_propertymanipulation.cpp: mylineedit.h \
		enum.h \
		propertymanipulation.h
	/usr/bin/moc $(DEFINES) $(INCPATH) propertymanipulation.h -o moc_propertymanipulation.cpp

moc_manipulator.cpp: rsfl_wgt.h \
		propertymanipulation.h \
		mylineedit.h \
		enum.h \
		mydevproperty.h \
		picturemode.h \
		bgcpl_wgt.h \
		manipulator.h
	/usr/bin/moc $(DEFINES) $(INCPATH) manipulator.h -o moc_manipulator.cpp

moc_rsfl_wgt.cpp: propertymanipulation.h \
		mylineedit.h \
		enum.h \
		mydevproperty.h \
		picturemode.h \
		rsfl_wgt.h
	/usr/bin/moc $(DEFINES) $(INCPATH) rsfl_wgt.h -o moc_rsfl_wgt.cpp

compiler_rcc_make_all: qrc_application.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_application.cpp
qrc_application.cpp: application.qrc \
		icons/false.png \
		icons/true.png
	/usr/bin/rcc -name application application.qrc -o qrc_application.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		imagehistogram.h \
		histogram_item.h \
		picturemode.h \
		enum.h \
		my_device.h \
		mydevproperty.h \
		starttangowin.h \
		mylineedit.h \
		subwindowrealtime.h \
		subwindow.h \
		imagewidget.h \
		imgmanipulation.h \
		subwindowsnapshot.h \
		tangosettingswin.h \
		menutab.h \
		tangovariables.h \
		mythread.h \
		bgcpl_wgt.h \
		propertymanipulation.h \
		manipulator.h \
		rsfl_wgt.h \
		slidermanip.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		imagehistogram.h \
		histogram_item.h \
		picturemode.h \
		enum.h \
		my_device.h \
		mydevproperty.h \
		starttangowin.h \
		mylineedit.h \
		subwindowrealtime.h \
		subwindow.h \
		imagewidget.h \
		imgmanipulation.h \
		subwindowsnapshot.h \
		tangosettingswin.h \
		menutab.h \
		tangovariables.h \
		mythread.h \
		bgcpl_wgt.h \
		propertymanipulation.h \
		manipulator.h \
		rsfl_wgt.h \
		slidermanip.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

my_device.o: my_device.cpp my_device.h \
		mydevproperty.h \
		enum.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o my_device.o my_device.cpp

starttangowin.o: starttangowin.cpp starttangowin.h \
		my_device.h \
		mydevproperty.h \
		mylineedit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o starttangowin.o starttangowin.cpp

subwindow.o: subwindow.cpp subwindow.h \
		imagewidget.h \
		imgmanipulation.h \
		enum.h \
		mydevproperty.h \
		picturemode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o subwindow.o subwindow.cpp

subwindowrealtime.o: subwindowrealtime.cpp subwindowrealtime.h \
		subwindow.h \
		imagewidget.h \
		imgmanipulation.h \
		enum.h \
		mydevproperty.h \
		picturemode.h \
		my_device.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o subwindowrealtime.o subwindowrealtime.cpp

imagewidget.o: imagewidget.cpp imagewidget.h \
		imgmanipulation.h \
		enum.h \
		mydevproperty.h \
		picturemode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o imagewidget.o imagewidget.cpp

subwindowsnapshot.o: subwindowsnapshot.cpp subwindowsnapshot.h \
		subwindow.h \
		imagewidget.h \
		imgmanipulation.h \
		enum.h \
		mydevproperty.h \
		picturemode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o subwindowsnapshot.o subwindowsnapshot.cpp

imgmanipulation.o: imgmanipulation.cpp imgmanipulation.h \
		enum.h \
		mydevproperty.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o imgmanipulation.o imgmanipulation.cpp

tangosettingswin.o: tangosettingswin.cpp tangosettingswin.h \
		enum.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tangosettingswin.o tangosettingswin.cpp

menutab.o: menutab.cpp menutab.h \
		enum.h \
		mainwindow.h \
		imagehistogram.h \
		histogram_item.h \
		picturemode.h \
		my_device.h \
		mydevproperty.h \
		starttangowin.h \
		mylineedit.h \
		subwindowrealtime.h \
		subwindow.h \
		imagewidget.h \
		imgmanipulation.h \
		subwindowsnapshot.h \
		tangosettingswin.h \
		tangovariables.h \
		mythread.h \
		bgcpl_wgt.h \
		propertymanipulation.h \
		manipulator.h \
		rsfl_wgt.h \
		slidermanip.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o menutab.o menutab.cpp

tangovariables.o: tangovariables.cpp tangovariables.h \
		mylineedit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tangovariables.o tangovariables.cpp

mythread.o: mythread.cpp mythread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mythread.o mythread.cpp

histogram_item.o: histogram_item.cpp histogram_item.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o histogram_item.o histogram_item.cpp

imagehistogram.o: imagehistogram.cpp imagehistogram.h \
		histogram_item.h \
		picturemode.h \
		enum.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o imagehistogram.o imagehistogram.cpp

mylineedit.o: mylineedit.cpp mylineedit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mylineedit.o mylineedit.cpp

picturemode.o: picturemode.cpp picturemode.h \
		enum.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o picturemode.o picturemode.cpp

bgcpl_wgt.o: bgcpl_wgt.cpp bgcpl_wgt.h \
		propertymanipulation.h \
		mylineedit.h \
		enum.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bgcpl_wgt.o bgcpl_wgt.cpp

slidermanip.o: slidermanip.cpp slidermanip.h \
		propertymanipulation.h \
		mylineedit.h \
		enum.h \
		bgcpl_wgt.h \
		mydevproperty.h \
		picturemode.h \
		imagehistogram.h \
		histogram_item.h \
		rsfl_wgt.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o slidermanip.o slidermanip.cpp

propertymanipulation.o: propertymanipulation.cpp propertymanipulation.h \
		mylineedit.h \
		enum.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o propertymanipulation.o propertymanipulation.cpp

manipulator.o: manipulator.cpp manipulator.h \
		rsfl_wgt.h \
		propertymanipulation.h \
		mylineedit.h \
		enum.h \
		mydevproperty.h \
		picturemode.h \
		bgcpl_wgt.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o manipulator.o manipulator.cpp

rsfl_wgt.o: rsfl_wgt.cpp rsfl_wgt.h \
		propertymanipulation.h \
		mylineedit.h \
		enum.h \
		mydevproperty.h \
		picturemode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rsfl_wgt.o rsfl_wgt.cpp

mydevproperty.o: mydevproperty.cpp mydevproperty.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mydevproperty.o mydevproperty.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_my_device.o: moc_my_device.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_my_device.o moc_my_device.cpp

moc_starttangowin.o: moc_starttangowin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_starttangowin.o moc_starttangowin.cpp

moc_subwindow.o: moc_subwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_subwindow.o moc_subwindow.cpp

moc_subwindowrealtime.o: moc_subwindowrealtime.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_subwindowrealtime.o moc_subwindowrealtime.cpp

moc_imagewidget.o: moc_imagewidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_imagewidget.o moc_imagewidget.cpp

moc_subwindowsnapshot.o: moc_subwindowsnapshot.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_subwindowsnapshot.o moc_subwindowsnapshot.cpp

moc_imgmanipulation.o: moc_imgmanipulation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_imgmanipulation.o moc_imgmanipulation.cpp

moc_tangosettingswin.o: moc_tangosettingswin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tangosettingswin.o moc_tangosettingswin.cpp

moc_menutab.o: moc_menutab.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_menutab.o moc_menutab.cpp

moc_tangovariables.o: moc_tangovariables.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tangovariables.o moc_tangovariables.cpp

moc_mythread.o: moc_mythread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mythread.o moc_mythread.cpp

moc_imagehistogram.o: moc_imagehistogram.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_imagehistogram.o moc_imagehistogram.cpp

moc_mylineedit.o: moc_mylineedit.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mylineedit.o moc_mylineedit.cpp

moc_mydevproperty.o: moc_mydevproperty.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mydevproperty.o moc_mydevproperty.cpp

moc_bgcpl_wgt.o: moc_bgcpl_wgt.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_bgcpl_wgt.o moc_bgcpl_wgt.cpp

moc_slidermanip.o: moc_slidermanip.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_slidermanip.o moc_slidermanip.cpp

moc_propertymanipulation.o: moc_propertymanipulation.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_propertymanipulation.o moc_propertymanipulation.cpp

moc_manipulator.o: moc_manipulator.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_manipulator.o moc_manipulator.cpp

moc_rsfl_wgt.o: moc_rsfl_wgt.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_rsfl_wgt.o moc_rsfl_wgt.cpp

qrc_application.o: qrc_application.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_application.o qrc_application.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

