/*----- PROTECTED REGION ID(MytestStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        MytestStateMachine.cpp
//
// description : C++ source for the «name» and its alowed
//               methods for commands and attributes
//
// project :     TestinsVasil.
//
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// SVN only:
// $HeadURL:  $
//
// CVS only:
// $Source:  $
// $Log:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================



#include <Mytest.h>
#include <MytestClass.h>

/*----- PROTECTED REGION END -----*/


/*
 * Mytest states description:
 *
 */

namespace Mytest_ns
{

//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : Mytest::is_ScalarDoubleState_allowed()
 *	Description : Execution allowed for ScalarDouble attribute.
 */
//--------------------------------------------------------

bool Mytest::is_ScalarDouble_allowed(Tango::AttReqType type)
{
	//	Check if access type.
	if ( type!=Tango::READ_REQ )
	{
			//	Not any excluded states for ScalarDouble attribute in WRITE access.
		
	/*----- PROTECTED REGION ID(Mytest::ScalarDoubleStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::ScalarDoubleStateAllowed_WRITE

		return true;
	}
	else
		//	Not any excluded states for ScalarDouble attribute in READ access.
	
	/*----- PROTECTED REGION ID(Mytest::read_ScalarDoubleStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::read_ScalarDoubleStateAllowed_READ

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Mytest::is_ScalarStrState_allowed()
 *	Description : Execution allowed for ScalarStr attribute.
 */
//--------------------------------------------------------

bool Mytest::is_ScalarStr_allowed(Tango::AttReqType type)
{
		//	Not any excluded states for ScalarStr attribute in READ access.
	
	/*----- PROTECTED REGION ID(Mytest::read_ScalarStrStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::read_ScalarStrStateAllowed_READ

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Mytest::is_FlipHorizontalState_allowed()
 *	Description : Execution allowed for FlipHorizontal attribute.
 */
//--------------------------------------------------------

bool Mytest::is_FlipHorizontal_allowed(Tango::AttReqType type)
{
	//	Check if access type.
	if ( type!=Tango::READ_REQ )
	{
			//	Not any excluded states for FlipHorizontal attribute in WRITE access.
		
	/*----- PROTECTED REGION ID(Mytest::FlipHorizontalStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::FlipHorizontalStateAllowed_WRITE

		return true;
	}
	else
		//	Not any excluded states for FlipHorizontal attribute in READ access.
	
	/*----- PROTECTED REGION ID(Mytest::read_FlipHorizontalStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::read_FlipHorizontalStateAllowed_READ

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Mytest::is_FlipVerticalState_allowed()
 *	Description : Execution allowed for FlipVertical attribute.
 */
//--------------------------------------------------------

bool Mytest::is_FlipVertical_allowed(Tango::AttReqType type)
{
	//	Check if access type.
	if ( type!=Tango::READ_REQ )
	{
			//	Not any excluded states for FlipVertical attribute in WRITE access.
		
	/*----- PROTECTED REGION ID(Mytest::FlipVerticalStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::FlipVerticalStateAllowed_WRITE

		return true;
	}
	else
		//	Not any excluded states for FlipVertical attribute in READ access.
	
	/*----- PROTECTED REGION ID(Mytest::read_FlipVerticalStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::read_FlipVerticalStateAllowed_READ

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Mytest::is_RotateState_allowed()
 *	Description : Execution allowed for Rotate attribute.
 */
//--------------------------------------------------------

bool Mytest::is_Rotate_allowed(Tango::AttReqType type)
{
	//	Check if access type.
	if ( type!=Tango::READ_REQ )
	{
			//	Not any excluded states for Rotate attribute in WRITE access.
		
	/*----- PROTECTED REGION ID(Mytest::RotateStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::RotateStateAllowed_WRITE

		return true;
	}
	else
		//	Not any excluded states for Rotate attribute in READ access.
	
	/*----- PROTECTED REGION ID(Mytest::read_RotateStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::read_RotateStateAllowed_READ

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Mytest::is_TestImageState_allowed()
 *	Description : Execution allowed for TestImage attribute.
 */
//--------------------------------------------------------

bool Mytest::is_TestImage_allowed(Tango::AttReqType type)
{
	//	Check if access type.
	if ( type!=Tango::READ_REQ )
	{
			//	Not any excluded states for TestImage attribute in WRITE access.
		
	/*----- PROTECTED REGION ID(Mytest::TestImageStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::TestImageStateAllowed_WRITE

		return true;
	}
	else
		//	Not any excluded states for TestImage attribute in READ access.
	
	/*----- PROTECTED REGION ID(Mytest::read_TestImageStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::read_TestImageStateAllowed_READ

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Mytest::is_UShortImgState_allowed()
 *	Description : Execution allowed for UShortImg attribute.
 */
//--------------------------------------------------------

bool Mytest::is_UShortImg_allowed(Tango::AttReqType type)
{
	//	Check if access type.
	if ( type!=Tango::READ_REQ )
	{
			//	Not any excluded states for UShortImg attribute in WRITE access.
		
	/*----- PROTECTED REGION ID(Mytest::UShortImgStateAllowed_WRITE) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::UShortImgStateAllowed_WRITE

		return true;
	}
	else
		//	Not any excluded states for UShortImg attribute in READ access.
	
	/*----- PROTECTED REGION ID(Mytest::read_UShortImgStateAllowed_READ) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::read_UShortImgStateAllowed_READ

	return true;
}


	/*----- PROTECTED REGION ID(Mytest::are_dynamic_attributes_allowed) ENABLED START -----*/

	//	Add your code to check if dynamic attributes are alowed

	/*----- PROTECTED REGION END -----*/	//	Mytest::are_dynamic_attributes_allowed


//=================================================
//		Commands Allowed Methods
//=================================================


//--------------------------------------------------------
/**
 *	Method      : Mytest::is_MyReadScalarCommandState_allowed()
 *	Description : Execution allowed for MyReadScalarCommand command.
 */
//--------------------------------------------------------

bool Mytest::is_MyReadScalarCommand_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for MyReadScalarCommand command.

	/*----- PROTECTED REGION ID(Mytest::MyReadScalarCommandStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::MyReadScalarCommandStateAllowed

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Mytest::is_ReadLocalDataFromTangoServerState_allowed()
 *	Description : Execution allowed for ReadLocalDataFromTangoServer command.
 */
//--------------------------------------------------------

bool Mytest::is_ReadLocalDataFromTangoServer_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for ReadLocalDataFromTangoServer command.

	/*----- PROTECTED REGION ID(Mytest::ReadLocalDataFromTangoServerStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::ReadLocalDataFromTangoServerStateAllowed

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Mytest::is_GeneratingRandomDataImageState_allowed()
 *	Description : Execution allowed for GeneratingRandomDataImage command.
 */
//--------------------------------------------------------

bool Mytest::is_GeneratingRandomDataImage_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for GeneratingRandomDataImage command.

	/*----- PROTECTED REGION ID(Mytest::GeneratingRandomDataImageStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::GeneratingRandomDataImageStateAllowed

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Mytest::is_SetDataImageState_allowed()
 *	Description : Execution allowed for SetDataImage command.
 */
//--------------------------------------------------------

bool Mytest::is_SetDataImage_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for SetDataImage command.

	/*----- PROTECTED REGION ID(Mytest::SetDataImageStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::SetDataImageStateAllowed

	return true;
}

//--------------------------------------------------------
/**
 *	Method      : Mytest::is_Load16BitImgState_allowed()
 *	Description : Execution allowed for Load16BitImg command.
 */
//--------------------------------------------------------

bool Mytest::is_Load16BitImg_allowed(const CORBA::Any &any)
{
	//	Not any excluded states for Load16BitImg command.

	/*----- PROTECTED REGION ID(Mytest::Load16BitImgStateAllowed) ENABLED START -----*/

	/*----- PROTECTED REGION END -----*/	//	Mytest::Load16BitImgStateAllowed

	return true;
}


	/*----- PROTECTED REGION ID(Mytest::are_dynamic_commands_allowed) ENABLED START -----*/

	//	Add your code to check if dynamic commands are alowed

	/*----- PROTECTED REGION END -----*/	//	Mytest::are_dynamic_commands_allowed

}	// namespace Mytest_ns
