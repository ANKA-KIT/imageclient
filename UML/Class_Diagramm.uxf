<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="11.5">
  <zoom_level>7</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>2352</x>
      <y>189</y>
      <w>476</w>
      <h>525</h>
    </coordinates>
    <panel_attributes>class my_Device : public QObject
--
QString attrStatistic;
QString attrCalcStatistic;
QTimer pingTimer;
Tango::DeviceProxy* device;
QString _serverName;
QString attrImg;
QList &lt;MyDevProperty *&gt; listPropServ;
--
   -void initNewProperty(MyDevProperty * prop, int param);
   -void setNewPropertyValue(int param, QVariant val);
--
    my_Device(QObject* parent = 0);
    void initDevice(QString serv , QString dev);
    void setDevice(QString s );         //Set Tango device
    Tango::DeviceAttribute setTangoAttr(Tango::DeviceProxy&amp; dev, QString attrName);
    bool setTangoAttr(Tango::DeviceProxy&amp; dev, QString attrName, Tango::DeviceAttribute &amp;attr);
    bool setTangoAttr(int attrName, Tango::DeviceAttribute &amp;attr);
    bool setUCharVal(Tango::DeviceAttribute&amp; attr, vector &lt;unsigned char&gt;&amp; val);
    bool setBoolVal(Tango::DeviceAttribute&amp; attr, QString&amp; val);
    bool setIntVal(Tango::DeviceAttribute&amp; attr, int&amp; val );
    bool setDoubleVal(Tango::DeviceAttribute&amp; attr, double&amp; val);
    bool setDoubleVal(Tango::DeviceAttribute&amp; attr, vector&lt;double&gt;&amp; val);
    bool setUShortVal(Tango::DeviceAttribute&amp; attr, vector &lt;unsigned short&gt;&amp; val);
    bool setBoolVal(Tango::DeviceAttribute&amp; attr, bool&amp; val);
    bool writeAttr(Tango::DeviceAttribute&amp; attr);
    bool setPropValFromServer(int propName, Tango::DeviceAttribute&amp; attr);
    void setTimeoutVal(int val);
    bool readServerPropertyVal(int param);
    ~my_Device();
    bool propertyAttrNameIsNULL(int param);
    bool propertyIsNULL(int param);
    void startWorkWithTime();
*signals:*
1e)void sendError(QString str);
2e)void goodConnection();
3e)void correctImgAttrVal();

--
*public slots:*
1s)bool sendTangoCommand(QString command);
2s)bool sendTangoCommandFidBack(QString command, Tango::DeviceData&amp; devData);
3s)void sendPing();
4s)void setAttrNames(QStringList lists );
5s)void setBrightnessDeviceValCommand(int val);  ...for all propertios
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>2352</x>
      <y>735</y>
      <w>469</w>
      <h>301</h>
    </coordinates>
    <panel_attributes>class ImgManipulation : public QObject
--
QList &lt;MyDevProperty *&gt; listProp;
--
explicit ImgManipulation(QObject *parent = 0);

 double getScaleVal();
    double getRotationVal();
    int getContrastVal();
    int getBrightnessVal();
    int getGammaVal();
    bool getHorFlipVal();
    bool getVerFlipVal();
    QImage chBrightness(QImage&amp; image, int val );
    QImage chContrast(QImage&amp; image, int val );
    QImage chGamma(QImage&amp; image, int val );

    QImage chRotate(QImage &amp;image, int val);
    QImage chScale(QImage &amp;image, double val);
    QImage chScale(QImage &amp;image, double valX, double valY);
    QImage chHorFlip(QImage &amp;image, bool val);
    QImage chVerFlip(QImage &amp;image, bool val);
    void resetParam(QImage &amp;img);
    void setParams(QList &lt;QVariant&gt; &amp;newListProp);
    void getParams(QList &lt;QVariant&gt; &amp;getListProp);

~ImgManipulation();
--
*public slots:*
1s)void resetParam();
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1946</x>
      <y>434</y>
      <w>385</w>
      <h>644</h>
    </coordinates>
    <panel_attributes>class ImageWidget : public QWidget
--
    QImage *img;                
    QImage *_OriginImg;    
    QImage *_originSnap;   
    int imgType;                
    ImgManipulation* manip;     
    vector &lt;unsigned short&gt; valUSh; 
    PictureMode *picMode;   
    int ImgDimX;               
    int ImgDimY;              
    int _curMouseX;           
    int _curMouseY;     
    int _clickedMouseX;       
    int _clickedMouseY;         
--
    -void recalcGreyImg(vector &lt;unsigned char&gt; &amp;valData, int X, int Y);
    -void recalcGreyImg16Bit();
    -void setOriginImg();
--
explicit ImageWidget(QWidget *parent = 0);
   ImageWidget( QImage* image, QWidget *parent = 0);
    void resizeWgt(int x, int y);
    void paintImg(QImage&amp; img);
    void setClientValues();
    void makeSnpFromWgt();
    void makeSnpFromImg();
    void mousePressEvent ( QMouseEvent * e);
    void mouseMoveEvent ( QMouseEvent * e);
    void paintEvent( QPaintEvent * e);
    void set8BitImgGreyMode();
    void set16BitImgGreyMode();
    void setRGBImgGreyMode();
    void setRGBImgColorMode();

    void set8BitImgColorMode();

    void setPicSetings(int x, int y);
    void getImageVector(vector&lt;unsigned char&gt;&amp; val, int w, int h);
    void calcGreyImg();
    void resetClientSideVal();
    void setScaleSnap(double val);
    void calcFullPictureScale(int width, int height, int space);
~ImageWidget();
*signals:*
1e)void resizeImgWgt(int,int);
2e)void repainting();
3e)void mousePosition(int x, int y);
4e)void mousePositionVal(int RGB, int val);
5e)void mousePositionVal(int RGB);
6e)void mousePositionVal(int R, int G, int B);
7e)void sendScale(QVariant val);
--
*public slots:*
1s)void rescreen();
2s)void saveImg();
3s)void printImg();
4s)void setAllValues(int val = 0);
5s)void setImgType(int type);
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1589</x>
      <y>1127</y>
      <w>308</w>
      <h>476</h>
    </coordinates>
    <panel_attributes>class SubWindow : public QMdiSubWindow
--
ImageWidget *wgt;
QWidget *board;
QLabel *lbRot;
QLabel *lbBr;
QLabel *lbCon;
QLabel *lbGam;
QLabel *lbScl;
QLabel *lbHorFl;
QLabel *lbVerFl;
QScrollArea * scrollArea;
int dimX;
int dimY; 
--
   -int _space;                
   -QMenu contextMenu;

   -void initLb();
   -void chImageMode(int mode);
   -void calcFullPictureScale(int width, int height);
--
explicit SubWindow(QMdiSubWindow *parent = 0);
  void setActionMenu(QList&lt;QAction *&gt; acts);
~SubWindow();
*signals:*
    1e)void send16BitData(vector &lt;unsigned short&gt;); 
    2e)void send16BitDataDirect(vector &lt;unsigned short&gt;);
    3e)void newPicture();                                 
    4e)void DisplayModeChanged();                  
    5e)void fullPictureModeChanged(SubWindow*);           
--
*public slots:*
    1s)void setLbBr(QVariant val);
    2s)void setLbRot(QVariant val);
    3s)void setLbCon(QVariant val);
    4s)void setLbGam(QVariant val);
    5s)void setLbScl(QVariant val);
    6s)void setLbHFlip(QVariant val);
    7s)void setLbVFlip(QVariant val);
    8s)void send16BitDataSlot();
    9s)void ShowContextMenu(const QPoint&amp; pos);
    10s)virtual void setFullPictureMode(bool val);
    11s)void resizeEvent ( QResizeEvent * event );
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1526</x>
      <y>301</y>
      <w>399</w>
      <h>805</h>
    </coordinates>
    <panel_attributes>class SubWindowRealtime : public SubWindow
--
    -bool _canBeClosed;         
    -QLabel *displayTime; 
    -QLabel *set1;           
    -QLabel *set2;           
    -QLabel *set3;           
    -QLabel *set4;
    -QLabel *set5;

    -void setLocalNumericVal(int param, double val);
    -double getDegree();
    -void setLocalPropertyValOnServerDifVal(int param, double dif);
    -bool readServerPropertyVal(int param);
    -void chConnectsClient(int param);
    -void setStat(QLabel *lb, double val, int iter);
    -void fullPictureModeResize(int x, int y);
    -void scaledPictureModeResize(int x, int y);
    -void setClientSideNumericVal(int param, double val);
    -void setClientSideConnects();
    -void setClientSideDisconnects();
    -void setServerSideConnects();
    -void initTimeLb();
    -void initFullPicMode();
    -void initSizableMode();
    -void initMyDev(QString serv, QString attr);
    -void setStatVal(vector&lt;double&gt;);
    -void serverSide();
    -bool makeImg();
--
--
    my_Device *myDev;           /*!&lt; Tango device class pointer*/
    QString _server;            /*!&lt; server name (HOST:DEVICE)*/
    QString _imgAttr;           /*!&lt; attr - image attribute name*/
    bool serverOperation;       /*!&lt; is server operation*/
    bool work;                  /*!&lt; is the process was in subwindow close event*/
    bool pause;                 /*!&lt; is it all ok with tango connection*/
    bool isTimeout;             /*!&lt; is user set delay*/
    bool isResized;             /*!&lt; is widget resized*/
    double *difLevelPers; 
--
SubWindowRealtime(QString, QString, bool*);
bool isCanBeClosed();
void setPause(bool p);
~SubWindowRealtime();
*signals:*
   1e)void closeRealtime(SubWindowRealtime*); 
   2e) void realtimeWinChanged(SubWindowRealtime*);
   3e) void isUShortData();  
   4e)void isUCharData();    
    5e)void ping();                    /*!&lt; sending ping to tango device*/

--
*public slots:*
1s)void resetImg();
2s)/////void resetServerParam();
3s)void resizeWgt(int, int);
4s)void closeEvent ( QCloseEvent * );
5s)void handleWindowStateChanged(Qt::WindowStates oldWSt,
                                                           Qt::WindowStates newWSt);
6s)void testOnError(QString);
7s)void testOnOk();
8s)void sendingPing();
9svoid chBrightnessOn(int val);
10s)void setBrightness(int val);
11s)void chServerOperation();
12s) void sendTangoCommand(QString com);
13s)    void setImageMode(int mode);
14s)    void calcStat();
15s)    void setTimeOutVal(int val);
16s)    void setTimeOut(bool p);
17s)   void setFullPictureMode(bool val);
18s)    void resizeEvent ( QResizeEvent * event ) ;
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1540</x>
      <y>1624</y>
      <w>448</w>
      <h>294</h>
    </coordinates>
    <panel_attributes>class SubWindowSnapshot : public SubWindow
--
    double scl;         
    double difLevelPers;
--
   -void initLbSnap();
--
    SubWindowSnapshot(QImage* img, ImgManipulation* man, double diff, double scale);
    SubWindowSnapshot();
    ~SubWindowSnapshot();
    void initFullPicMode(QImage&amp; img);
    void initSizableMode(QImage&amp; img);
    void initPropConnects();
~SubWindowSnapshot();
*signals:*
1e)void SnapshotWinChanged(SubWindowSnapshot*);
2e)void closeSnap(SubWindowSnapshot* pointer); 
--
public slots:
1s)void handleWindowStateChanged(Qt::WindowStates oldWSt, 
                                                           Qt::WindowStates newWSt);
2s)void chBrightnessOn(int val);  ..for all properties
3s)void resetImg();
4s) void resizeEvent ( QResizeEvent * event );
5s)void resizeWgt(int x, int y);
6s)void setBrightness(int val);
7s)void setFullPictureMode(bool val);
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1029</x>
      <y>315</y>
      <w>455</w>
      <h>1225</h>
    </coordinates>
    <panel_attributes>class MainWindow : public QMainWindow
--
    -bool histogramManip;  
    -double isFullPicReal();
    -QString setTitlePrefix(int &amp;curSubwindow);
    -void readSettings();
    -void writeSettings();
    -void deleteAllReal();
    -void deleteAllSnap();
    -void setSlider(SubWindow* subW);
    -void connectPropertyValues(SubWindow* subW);
    -void setSliderConnects(SubWindow*subW, int mode);
    -void setManipulatorWGT(SubWindow *subW);
    -void setManipConnects(SubWindow *subW, int mode);
    -void setManip_wgt(SubWindow* subW);
    -void setFullPictureMode(SubWindow* subW);

    -QList&lt;QAction*&gt; realtimeMenu();
    -QList&lt;QAction*&gt; snapshotMenu();
    -void deletePropertyValues();
    -void deleteManipulatorWGT();
    -void connectManipulation(int opt);
    -void setImageMode(int mode);
    -int getBGCPL_WGT_MODE(int mode);
--
    SliderManip *slider;            /*!&lt; Manipulator with histogram*/
    Manipulator *manip_wgt;         /*!&lt; Manipulator*/

    QList&lt;SubWindowRealtime *&gt;  listReal;       /*!&lt; List of realtime subwindows*/
    QList&lt;SubWindowSnapshot *&gt;  listSnap;       /*!&lt; List of snapshot subwindows*/
    int  curRealtimeInt;            /*!&lt; current realtime subwindow index*/
    int  realtimeIntLast;           /*!&lt; last focused realtime subwindow index*/
    int  curSnapshotInt;            /*!&lt; current snapshot subwindow index*/
    int curSnapshotIntLast;         /*!&lt; last focused snapshot subwindow index*/
    QList&lt;MyThread *&gt;  threads;     /*!&lt; list of threads*/

    Ui::MainWindow *ui;             /*!&lt; pointer to some widgets*/
    StartTangoWin* tangoDev;        /*!&lt; Window for setting connection with tango device*/
    TangoSettingsWin* tangoDevSet;  /*!&lt; Manipulator window*/
    TangoVariables *tangoVar;       /*!&lt; window for setting tango attributes name*/
    QMdiArea*  area;                /*!&lt; Area for subwindow locaton*/
    MenuTab* commandMenu;           /*!&lt; Command menu of app*/

    QLabel *lbMouseX;               /*!&lt; label for displaying Mouse X position*/
    QLabel *lbMouseY;               /*!&lt; label for displaying Mouse Y position*/
    QLabel *lbPixVal;               /*!&lt; label for displaying pixel value in mouse position*/
--
explicit MainWindow(QWidget *parent = 0);
~MainWindow();
--
*public slots:*
    1s)void connectSubwindowSignals(SubWindow *subWin);
    2s)void delStartTangoWin();
    3s)void delTangoSettingWin();
    4s)void delTangoNamesWin();
    5s)void initTangoSettingWin(int param);
    6s)void initStartTangoWin();
    7s)void initTangoNamesWin();
    8s)void mkRealtime(QString servName, QString imgAtr );
    9s)void mkSnapshot();
    10s)void mkSnapshot(ImageWidget* image, double difHW);
    11s)void resizeEvent( QResizeEvent *e );
    12s)void realtimeChanged(SubWindowRealtime* curRealtimeWin);
    13s)void SnapshotChanged(SubWindowSnapshot* curSnapWin);
    14s)void closeEvent ( QCloseEvent * closeEvent);
    15s)void onCloseRaltime(SubWindowRealtime *pointer);
    16s)void onCloseSnapshot(SubWindowSnapshot *pointer);
    17s)void settingBrightness();
    18s)void settingContrast();
    19s)void settingGamma();
    20s)void settingRotation();
    21s)void settingScale();
    22s)void settingHorFlip();
    23s)void settingVerFlip();
    24s)void settingTimeOut();
    25s)void sendingTangoCommand();
    26s)void chBrightnessOn();
    27s)void chContrastOn();
    28s)void chGammaOn();
    29s)void chRotationOn();
    30s)void chScaleOn();
    31s)void saveImg();
    32s)void printSnap();
    33s)void chServerManipulation();
    34s)void resetImg();
    35s)void changeColorFormat(int val);
    36s)void setTangoVar(QStringList ls);
    37s)void setRGBlbVal(int r, int g, int b);
    38s)void setGreylbVal(int RGB, int val);
    39s)void setGreylbVal(int RGB);
    40s)void setMouseXlbVal(int x);
    41s)void setMouseYlbVal(int y);
    42s)void setMousePos(int x, int y);
    43s)void setLeftBorder(unsigned short val);
    44s)void setRightBorder(unsigned short val);
    45s)void setLeftBorderSnp(unsigned short val);
    46s)void setRightBorderSnp(unsigned short val);
    47s)void set16BitGreyImageMode();
    48s)void set8BitGreyImageMode();
    49s)void set8BitColorImageMode();
    50s)void setRGBGreyImageMode();
    51s)void setRGB_ARGBImageMode();
    52s)void setFullPictureMode();
    53s)void setRealtimePause();
    54s)void setManipulator();
    55s)void setManipulatorReal();
    56s)void setManipulatorSnap();
    57s)void setFullPictureModeSnap();
    58s)void chManipulator(SubWindow* subW);
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1617</x>
      <y>1960</y>
      <w>455</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>Connects
--
connect((ImgManipulation*)wgt-&gt;manip, SIGNAL(BrVal(int)), 
                this, SLOT(setLbBr(int)));
connect(wgt, SIGNAL(resizeImgWgt(int,int)), 
              this, SLOT(resizeWgt(int,int)));
connect((ImgManipulation*)wgt-&gt;manip, SIGNAL(repaint(int)), 
                  (ImageWidget*)wgt, SLOT(setAllValues(int)));
connect(this,SIGNAL(windowStateChanged(Qt::WindowStates,Qt::WindowStates )),
            this,SLOT(handleWindowStateChanged(Qt::WindowStates,Qt::WindowStates )));

bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1120</x>
      <y>175</y>
      <w>189</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>class MyThread : public QThread
--
--
void run();
~MyThread();
*signals:*
1e)void paint();
//2e)void snap();
--
*public slots:*
1s)void doTheWork();
//2s)void mkSnap();
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>518</x>
      <y>0</y>
      <w>448</w>
      <h>588</h>
    </coordinates>
    <panel_attributes>1s -&gt; Set connections between subwindows and label 
   for displaying  property value
2s -&gt; On close StarttangoWin, Delete object
3s -&gt; On close TangoSettingWin (window manipulator), Delete object
4s -&gt; On close TangoNamesWin, Delete object
5s-&gt; init TangoSettingWin (window manipulator)
6s -&gt; init StarttangoWin
7s -&gt; init TangoNamesWin
8s -&gt; Make realtime subwindow
9s -&gt; Slot for initing snapshot subwindow
10s -&gt; Make snapshot subwindow
11s -&gt; On realtime resize
12s -&gt; On realtime subwindow change focus
13s -&gt; On snapshot subwindow change focus
14s -&gt; on close Main window
15s -&gt; On realtime subwindow close
16s -&gt; On snapshot subwindow close
17s -&gt; init window manipulator for setting Brightness value
18s -&gt; init window manipulator for setting Contrast value
19s -&gt; init window manipulator for setting Gamma value
20s -&gt; init window manipulator for setting Rotation value
21s -&gt; init window manipulator for setting Scale value
22s -&gt; init window manipulator for setting Horizontal fliping value
23s -&gt; init window manipulator for setting Vertical fliping value
24s -&gt; init window manipulator for settingtimeout value
25s -&gt; init window manipulator for setting tango command for sending

26s -&gt; init window manipulator for setting diff Brightness value
27s -&gt; init window manipulator for setting diff Contrast value
28s -&gt; init window manipulator for setting diff Gamma value
29s -&gt; init window manipulator for setting diff Rotation value
30s -&gt; init window manipulator for setting diff Scale value
31s -&gt; On save snapshot
32s -&gt; On save snapshot
33s -&gt; On set server manipulation
34s -&gt; On set reset image values
35s -&gt; On change color format
36s -&gt; on setting tango attributes
37s, 38s, 39s -&gt; Set label value of pixel value
40s, 41s, 42s -&gt; set mouse position value
43s, 44s, 45s ,46s -&gt; set limit value fot greyscale image
47s - 51s -&gt; on set picture mode
52s -&gt; On set full picture mode
53s -&gt;on set realtime pause
54s -&gt; Set vasiable value and delete laset manipulator (histogram/manipulator)
55s -&gt; On set manipulator for realtime
56s -&gt; On set manipulator fosnapshot
57s -&gt; Set full picture mode for snapshot subwindow
58s -&gt; change type of manipulator

bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1799</x>
      <y>28</y>
      <w>427</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>Connects
--
connect((my_Device*)myDev, SIGNAL(sendError(QString)), 
         this, SLOT(testOnError(QString)));
connect((my_Device*)myDev, SIGNAL(goodConnection()), 
           this, SLOT(testOnOk()));
connect((ImageWidget*)wgt, SIGNAL(resizeImgWgt(int,int)), 
         this, SLOT(resizeWgt(int,int)));
connect(this,SIGNAL(windowStateChanged(Qt::WindowStates,Qt::WindowStates )),
     this,SLOT(handleWindowStateChanged(Qt::WindowStates,Qt::WindowStates )));
connect((ImgManipulation*)wgt-&gt;manip, SIGNAL(BrVal(int)),
          this, SLOT(setLbBr(int)));
connect((my_Device*)myDev, SIGNAL( setBrightnessDeviceVal(int val)),
              this, SLOT(setLbBr(int)));

IN "11s) chServerOperation()"
    if(serverOperation)
connect((ImgManipulation*)wgt-&gt;manip, SIGNAL(BrVal(int)), 
         this, SLOT(setLbBr(int)));
    else
disconnect((ImgManipulation*)wgt-&gt;manip, SIGNAL(BrVal(int)), 
         this, SLOT(setLbBr(int)));
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>2016</x>
      <y>1757</y>
      <w>273</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>1s -&gt; slot on system signal, change Focus
2s, 6s -&gt; slot on setting user data
3s -&gt; slot on UI, set default value
4s -&gt; slot on resize event
5s -&gt; setting correct size of resizing
7s -&gt; set full picture mode on widget
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1463</x>
      <y>140</y>
      <w>273</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>5s -&gt; slot on system signal, change Focus
12s, 13s -&gt; setting property value on label
1s -&gt; slot on UI, set default value
4s -&gt; onClose Realtime subwindow
3s -&gt; setting correct size of resizing
6s, 7s, 8s -&gt; slot on dvice signal
9s, 10s - setting brightness value
11s -&gt; set client/server side
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1988</x>
      <y>1099</y>
      <w>287</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>1s -&gt; repaint widget
2s -&gt; seve Img
3s -&gt; print Img
4s -&gt; set all current client property values to Image
5s -&gt; set ImageType variable value
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>2289</x>
      <y>7</y>
      <w>259</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>1s -&gt;slot on sending command (UI)
2s -&gt;sending Tango command with reciving data
3s -&gt;send a ping to TangoDevice
4s -&gt;setting Tango Attrs name (UI)
5s -&gt; set property val in the TangoDevice
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>2541</x>
      <y>1113</y>
      <w>210</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>1s -&gt; set default property values
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1078</x>
      <y>42</y>
      <w>343</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>Connects
--
connect(thr, SIGNAL(paint()), 
      curRealtimePointer, SLOT(sendingPing()), Qt::QueuedConnection);
connect(curRealtimePointer, SIGNAL(ping()), 
             thr, SLOT(doTheWork()));

bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1519</x>
      <y>224</y>
      <w>188</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>175;21;21;77</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1799</x>
      <y>259</y>
      <w>90</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>21;21;77;42</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1967</x>
      <y>1736</y>
      <w>62</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>49;21;21;63</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1736</x>
      <y>1897</y>
      <w>202</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>21;63;189;21</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1932</x>
      <y>1057</y>
      <w>83</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>70;42;21;21</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>2310</x>
      <y>77</y>
      <w>146</w>
      <h>125</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>21;21;133;112</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>2436</x>
      <y>1015</y>
      <w>153</w>
      <h>111</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>140;98;21;21</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>945</x>
      <y>357</y>
      <w>97</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>21;42;84;21</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1183</x>
      <y>112</y>
      <w>55</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>42;21;21;63</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1477</x>
      <y>245</y>
      <w>48</w>
      <h>1847</h>
    </coordinates>
    <panel_attributes>lt=:</panel_attributes>
    <additional_attributes>21;21;35;1834</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1911</x>
      <y>301</y>
      <w>34</w>
      <h>881</h>
    </coordinates>
    <panel_attributes>lt=:</panel_attributes>
    <additional_attributes>21;21;21;868</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>2303</x>
      <y>84</y>
      <w>55</w>
      <h>1805</h>
    </coordinates>
    <panel_attributes>lt=:</panel_attributes>
    <additional_attributes>42;21;21;1792</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>2016</x>
      <y>1624</y>
      <w>273</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>Signals
--
1e -&gt;emiteted in "1S"
        informs MainWindow about focus changing 
2e -&gt; informs MainWindow about subwindow closing
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1967</x>
      <y>1666</y>
      <w>132</w>
      <h>97</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>119;21;21;84</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1484</x>
      <y>21</y>
      <w>294</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>Signals
--
1e -&gt;emiteted in "4S"
        informs MainWindow about closing realtime 
2e -&gt;emiteted in "5S"
        informs MainWindow about focus changing 
3e -&gt; emited in "testOnOk"
         informs that we can read new data oposide reconnect
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1729</x>
      <y>91</y>
      <w>34</w>
      <h>223</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>21;21;21;210</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>2002</x>
      <y>287</y>
      <w>224</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>Signals
--
1e -&gt;emited in "setClientValues"
                  in  "setAllValues(int val)"
       inform to set correct Subwindow size
2e -&gt; subwindow need in repainting
3e-&gt; emited in "mouseMoveEvent"
	inform about current mouse position
4e, 5e,6e -&gt; emited in "mouseMoveEvent"
	inform about current picture value
7e -&gt; send to manipulator current scale value
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1925</x>
      <y>399</y>
      <w>132</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>119;21;21;35</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>2555</x>
      <y>28</y>
      <w>287</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Signals
--
1e  -&gt; emited in all catches
        inform about Tango error
2e -&gt; emited in "3s"
                 in "setDevice(QString s )"
                 in "initDevice(QString serv , QString dev)"
         inform about good connection with Tango server
3e  -&gt; emited in "setTangoAttr"
          inform about correct conection with TAngo attr
 
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>2667</x>
      <y>147</y>
      <w>48</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>35;21;21;42</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>539</x>
      <y>728</y>
      <w>483</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>RSFL_WGT
--
    #void setFliping(bool hor, bool ver);
    #void setRotation(int stVal);
--
    QCheckBox *hFl;             /*!&lt; horizontal fliping manipulator*/
    QCheckBox *vFl;             /*!&lt; vertical fliping manipulator*/
    QComboBox *rotation;        /*!&lt; rotation manipulator*/
    QLabel *lbRotation;         /*!&lt; label rotation*/
    Scl_WGT   *scale;           /*!&lt; scale manipulator*/

    explicit RSFL_WGT(QList &lt;MyDevProperty *&gt; &amp;prop, QWidget *parent = 0);
    void setRotationVal(int stVal);
    ~RSFL_WGT();

signals:
    1e)void sendHorFlipVal(QVariant val);  /*!&lt; sending horizontal fliping value \param val - value*/
    2e)void sendVerFlipVal(QVariant val);  /*!&lt; sending vertical fliping value \param val - value*/
    3e)void sendRotationVal(QVariant val); /*!&lt; sending rotation value \param val - value*/
--
public slots:
    1s)void horFlipSlot(bool val);
    2s)void verFlipSlot(bool val);
    3s)void rotationSlot(QString val);
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>707</x>
      <y>1001</y>
      <w>273</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>1s -&gt; slot on setting check
2s -&gt; slot on setting check
3s -&gt; slot on setting choose value

bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>931</x>
      <y>959</y>
      <w>49</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>42;42;21;21</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>651</x>
      <y>602</y>
      <w>273</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>Signals
--
1e -&gt;emiteted in "1S"
        informs setting new value
2e -&gt;emiteted in "2S"
        informs setting new value
3e -&gt;emiteted in "3S"
        informs setting new value
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>700</x>
      <y>672</y>
      <w>97</w>
      <h>69</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>21;21;84;56</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>714</x>
      <y>1729</y>
      <w>784</w>
      <h>364</h>
    </coordinates>
    <panel_attributes>SliderManip
--
    #void setStartWidgetPosition();
    #void setLeftPanel();
    #void initBtHis();
    #void initManipulators(int mode,  QList &lt;MyDevProperty *&gt; &amp;prop, PictureMode *pm, QImage* img, vector &lt;unsigned short&gt; &amp;usData);
--
    BGCPL_WGT *bgcpl;           /*!&lt; manipulator widget*/
    RSFL_WGT *rsfl;             /*!&lt; manipulator widget*/
    Histogrammm *histogram;     /*!&lt; histogram widget*/
    QImage *imgPointer;         /*!&lt; pointer to the image*/
    int curPicMode;             /*!&lt; current picture mode*/
    QCheckBox *cbData;          /*!&lt; CheckBox 16 bit histogram*/
    QCheckBox *cbAutoData;      /*!&lt; CheckBox auto redrawing histogram*/
    QPushButton *refreshHis;    /*!&lt; button redraw histogram*/
    QPushButton *btHis;         /*!&lt; button change manipulator style*/
--
    explicit SliderManip(int mode, QList &lt;MyDevProperty *&gt; &amp;prop, PictureMode *pm, QImage* img, vector &lt;unsigned short&gt; &amp;usData, QWidget *parent = 0);
    void changeDevice(int mode,  QList &lt;MyDevProperty *&gt; &amp;prop, PictureMode *pm, QImage* img, vector &lt;unsigned short&gt; &amp;usData );
    ~SliderManip();
signals:
    1e)void get16Bit();            /*!&lt; get 16 bit data for drawing histogram*/
    2e)void hidehistogram();       /*!&lt; change manipulator style*/
--
public slots:
    1s)void get16BitData(vector &lt;unsigned short&gt; data);
    2s)void redrawHistogram();
    3s)void recalcHistogram();
    4s)void recalcHistogram16Bit(vector &lt;unsigned short&gt; data);
    5s)void resizeEvent ( QResizeEvent * event );
    6s)void closeEvent (QCloseEvent *e);
    7s)void turnOffHistogram();
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>910</x>
      <y>1638</y>
      <w>126</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>21;21;119;91</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>777</x>
      <y>1561</y>
      <w>273</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>1s -&gt;Get 16bit data for drawing histogram
2s -&gt; on redrawing
3s -&gt; calculte histogram not 16bit image
4s -&gt; calculte histogram 16bit image
5s -&gt; On resize manipulator window
6s -&gt; On close manipulator window
7s -&gt; On change manipulator type click
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1155</x>
      <y>1561</y>
      <w>301</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Signals
--
1e -&gt; is a signal which send for getting 16bit data from
     imagewidget
2e -&gt;emiteted in "7S"
        informs about needing to change type of manipulator
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1029</x>
      <y>1624</y>
      <w>203</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>196;21;21;105</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>0</x>
      <y>728</y>
      <w>532</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>Manipulator
--
    #void initObjects(int mode, QList &lt;MyDevProperty *&gt; &amp;prop, PictureMode *pm);
--
    BGCPL_WGT *bgcpl; /*!&lt; Brightness gamma comtrast pixel level manipulator*/
    RSFL_WGT  *rsfl;    /*!&lt; rotation scale flping manipulator*/
    QPushButton *btHis; /*!&lt; Histogram/single manipulator change button*/
--
    explicit Manipulator(int mode, QList &lt;MyDevProperty *&gt; &amp;prop, PictureMode *pm,QWidget *parent = 0);
    void changeDevice(int mode, QList &lt;MyDevProperty *&gt; &amp;prop, PictureMode *pm);
    ~Manipulator();
signals:
    1e)void showhistogram(); /*!&lt; change manipulator style*/
--
public slots:
    1s)void closeEvent (QCloseEvent *e);
    2s)void turnOnHistogram();
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>238</x>
      <y>609</y>
      <w>273</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>Signals
--
1e -&gt;emiteted in "2S"
        informs about needin to change manipulator type
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>112</x>
      <y>651</y>
      <w>209</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>196;21;21;77</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>224</x>
      <y>952</y>
      <w>273</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>1s -&gt; slot on Close manipulator
2s -&gt; slot on click "Histogram on"

bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>469</x>
      <y>903</y>
      <w>76</w>
      <h>62</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>21;49;63;21</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>224</x>
      <y>1120</y>
      <w>476</w>
      <h>742</h>
    </coordinates>
    <panel_attributes>BGCPL_WGT
--
    -void init();
    -void setLeftVal(int val);
    -void setRightVal(int val);
    -void initBr();
    -void initCon();
    -void initGm(int);
    -void initLBorder();
    -void initRBorder();
    -void initColorMode(int gm);
    -void init16BitGreyMode();
    -void init8BitGreyMode();

--
    QLabel *lbHisLB;            /*!&lt; left border label*/
    QLabel *lbHisRB;            /*!&lt; right border label*/
    QLabel *lbHisBr;            /*!&lt; brightness label*/
    QLabel *lbHisCon;           /*!&lt; contrast label*/
    QLabel *lbHisGm;            /*!&lt; gamma label*/

    MyLineEdit *rightLine;      /*!&lt; right border line edit*/
    MyLineEdit *leftLine;       /*!&lt; left border line edit*/
    MyLineEdit *brLine;         /*!&lt; brightness line edit*/
    MyLineEdit *conLine;        /*!&lt; contrast line edit*/
    MyLineEdit *gmLine;         /*!&lt; gamma line edit*/
    QSlider *leftBorder;        /*!&lt; left border slider*/
    QSlider *rightBorder;       /*!&lt; right border slider*/
    QSlider *brig;              /*!&lt; brightness slider*/
    QSlider *contr;             /*!&lt; contrast slider*/
    QSlider *gamma;             /*!&lt; gamma slider*/

    #int lastbr;                 /*!&lt; brightness value*/
    #int lastContr;              /*!&lt; contrast value*/

    #int maxContrast;            /*!&lt; maximum contrast value*/
    #int minContrast;            /*!&lt; minimum contrast value*/
    #int maxBrightness;          /*!&lt; maximum brightness value*/
    #int minBrightness;          /*!&lt; minimum brightness value*/
    #int stContr;                /*!&lt; start contrast value*/
    #int stBr;                   /*!&lt; start brightness value*/
    #int stLBorder;              /*!&lt; start left border value*/
    i#nt stRBorder;              /*!&lt; start right border value*/
    #bool isRGB;                 /*!&lt; is it RGB image*/
    #bool resetParam;            /*!&lt; is should reset widget values*/

    #void switchMode(int mode, int gm);

--
    BGCPL_WGT(QWidget *parent=0);
    BGCPL_WGT(int mode,int br, int con, QWidget *parent=0, int gm=0, int lBr=0, int rBr=0 );
    ~BGCPL_WGT();

signals:
    1e)void setRBorder(unsigned short);        /*!&lt; set right border limit of grescale image*/
    2e)void setLBorder(unsigned short);        /*!&lt; set left border limit of grescale image*/
    3e)void setBr(QVariant);                   /*!&lt; set brightness value*/
    4e)void setCon(QVariant);                  /*!&lt; set contrast value*/
    5e)void setGm(QVariant);                   /*!&lt; set Gamma value*/
--
public slots:
    void setLeftBorder(int);
    void setRightBorder(int);
    void setBrImg(int val);
    void setConImg(int val);
    void setGmImg(int val);
    void receiveBr(QVariant val);
    void receiveCon(QVariant val);
    void receiveGm(QVariant val);
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>728</x>
      <y>1372</y>
      <w>273</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>1s -&gt; slot on Close manipulator
2s -&gt; slot on click "Histogram on"

bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>679</x>
      <y>1386</y>
      <w>56</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>49;21;21;42</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>714</x>
      <y>1169</y>
      <w>273</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>Signals
--
1e -&gt;emiteted in "2S"
        informs about needin to change manipulator type
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>679</x>
      <y>1211</y>
      <w>112</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>105;21;21;35</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1995</x>
      <y>1183</y>
      <w>273</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>Signals
--
1e -&gt;Send 16bit image data to manipulator 
          for redrawing histogram
2e -&gt; Send 16bit image data to manipulator 
          for redrawing histogram
3e -&gt; inform about getting new picture
4e -&gt; inform about changing fullpicturemode
5e -&gt; inform mainwindow about changing fullpicturemode
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1876</x>
      <y>1197</y>
      <w>132</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>119;21;21;147</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1946</x>
      <y>1344</y>
      <w>357</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>1s - 7s -&gt; slots for setting label data 
     (image property data)
8s -&gt; slot on getting signal that manipulator need in new 16 bit data
9s -&gt; slot on contextMenu show
10s -&gt; setting Picture mode
11s -&gt; on resize
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1876</x>
      <y>1337</y>
      <w>83</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>70;21;21;21</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>2863</x>
      <y>105</y>
      <w>525</w>
      <h>266</h>
    </coordinates>
    <panel_attributes>PictureMode
--
    #int _delim;                     /*!&lt; Delimitr (for correct pixel value bytes for pixel)*/
    #int _colorFormat;               /*!&lt; QImage::Format value*/
    #int _pictureMode;               /*!&lt; index of current picture mode*/
    #virtual QImage setImageVal(unsigned int width, unsigned int height, vector &lt;unsigned char&gt;&amp; val);
--
    int getPictureMode();
    virtual int getRBorder(){return 0;}
    virtual int getLBorder(){return 0;}
    virtual void setRBorder(int){}
    virtual void setLBorder(int){}
    void setColorFormat(int val);
    void setDelimitr(int val);
    int getColorFormat();
    int getDelimitr();
    void changeColorFormat(int format);
    virtual QImage setImage(int x, int y, vector &lt;unsigned char&gt;&amp; val);
    virtual void Convert16BitData(vector &lt;unsigned short&gt;&amp; val16, vector &lt;unsigned char&gt;&amp; val8){}
    PictureMode();
    virtual QImage recalcGreyImg(int ,int, vector &lt;unsigned char&gt;&amp; ){ return QImage();}
    virtual void recalcColors(vector &lt;unsigned char&gt;&amp; , vector &lt;unsigned char&gt;&amp; ){}
    virtual ~PictureMode(){}
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>2884</x>
      <y>392</y>
      <w>350</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>MydevProperty
--
    #QVariant _val;          /*!&lt; value*/
    #QString _propName;      /*!&lt; name of property*/
    #QString _attr;          /*!&lt; attribute name of property*/
--
    MyDevProperty(){}
    virtual ~MyDevProperty(){}
    virtual QVariant getValue();
    virtual QString getAttrName();
    virtual QString getPropName();
signals:
    1e)void setVal(QVariant);      /*!&lt; send property value*/
    2e)void repaint(int);          /*!&lt; send a signal for repaint screen*/
--
public slots:
    1s)virtual void setValue(QVariant val);
    2s)void setAttrName(QString val);
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>3101</x>
      <y>714</y>
      <w>273</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>1s -&gt; slot on Set new property value
2s-&gt; slot on set new tango property attr name
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>3122</x>
      <y>567</y>
      <w>104</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>21;147;91;21</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>2891</x>
      <y>623</y>
      <w>273</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>Signals
--
1e -&gt;emiteted in "1S"
        informs about setting new property value
2e -&gt; informs pnapshot subwindow 
       about need in repainting with new property value
bg=red
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>2968</x>
      <y>567</y>
      <w>104</w>
      <h>69</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>21;56;91;21</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>2828</x>
      <y>35</y>
      <w>34</w>
      <h>1070</h>
    </coordinates>
    <panel_attributes>lt=:</panel_attributes>
    <additional_attributes>21;21;21;1057</additional_attributes>
  </element>
</diagram>
